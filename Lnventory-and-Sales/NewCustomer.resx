<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backsales.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zyw1KlPwX1RYrm40i26mwNri/XFYZ//Z
</value>
  </data>
</root>